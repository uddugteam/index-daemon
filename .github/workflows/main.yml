name: Build and Deploy

on:
  push:
    branches:
      - master
      - dev
      - CI

env:
  GCP_WIP: projects/877045599866/locations/global/workloadIdentityPools/github-actions/providers/github-actions
  GCP_SA:  github-actions@winter-jet-355409.iam.gserviceaccount.com
  #SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  REGISTRY: europe-west4-docker.pkg.dev/winter-jet-355409/holygate # Docker Registry
  SERVICE: index-daemon

permissions:
    contents: 'read'
    id-token: 'write'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0.4.0'
      with:
        token_format: 'access_token'
        workload_identity_provider: ${{ env.GCP_WIP }}
        service_account: ${{ env.GCP_SA }}

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin $REGISTRY

    - name: Version
      id: version
      run: echo "::set-output name=version::${GITHUB_REF_NAME}-${GITHUB_SHA::7}"

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$REGISTRY/$SERVICE:${GITHUB_REF_NAME}-${GITHUB_SHA::7}" \
          .
    #Push the Docker image to Docker Registry
    - name: Publish
      run: |-
        docker push "$REGISTRY/$SERVICE:${GITHUB_REF_NAME}-${GITHUB_SHA::7}"

    #- name: Slack notify
    #  uses: act10ns/slack@v1
    #  if: failure()
    #  with:
    #    status: ${{ job.status }}
    #    steps: ${{ toJson(steps) }}


  deploy_staging:
    name: Deploy Staging
    needs: build
    runs-on: ubuntu-latest
    if: github.ref_name == 'master' || github.ref_name == 'dev' || github.ref_name == 'CI'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy Staging
        uses: ./.github/actions/deploy
        with:
          cluster: dev
          zone: us-east1-b
          namespace: staging
          service: ${{ env.SERVICE }}
          version: ${{needs.build.outputs.version}}

      #- name: Slack notify
      #  uses: act10ns/slack@v1
      #  if: always()
      #  with:
      #    status: ${{ job.status }}
      #    steps: ${{ toJson(steps) }}

#  deploy_prod:
#    name: Deploy Prod
#    needs: build
#    runs-on: ubuntu-latest
#    if: github.ref_name == 'master'
#
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      - name: Deploy Prod
#        uses: ./.github/actions/deploy
#        with:
#          cluster: prod
#          zone: us-east1-b
#          namespace: prod
#          service: ${{ env.SERVICE }}
#          version: ${{needs.build.outputs.version}}

      #- name: Slack notify
      #  uses: act10ns/slack@v1
      #  if: always()
      #  with:
      #    status: ${{ job.status }}
      #    steps: ${{ toJson(steps) }}

